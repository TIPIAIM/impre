{
  "version": 3,
  "sources": ["../../num2words/src/numtowords.js"],
  "sourcesContent": ["(function (root, factory) {\r\n\tif ( typeof define === 'function' && define.amd ) {\r\n\t\tdefine([], function () {\r\n\t\t\treturn factory(root);\r\n\t\t});\r\n\t} else if ( typeof exports === 'object' ) {\r\n\t\tmodule.exports = factory(root);\r\n\t} else {\r\n\t\troot.numToWords = factory(root);\r\n\t}\r\n })(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\r\n\r\n\t'use strict';\r\n\tvar arr = function arr(x) {\r\n\t\treturn Array.from(x);\r\n\t  };\r\n\t  var num = function num(x) {\r\n\t\treturn Number(x) || 0;\r\n\t  };\r\n\t  var str = function str(x) {\r\n\t\treturn String(x);\r\n\t  };\r\n\t  var isEmpty = function isEmpty(xs) {\r\n\t\treturn xs.length === 0;\r\n\t  };\r\n\t  var take = function take(n) {\r\n\t\treturn function (xs) {\r\n\t\t  return xs.slice(0, n);\r\n\t\t};\r\n\t  };\r\n\t  var drop = function drop(n) {\r\n\t\treturn function (xs) {\r\n\t\t  return xs.slice(n);\r\n\t\t};\r\n\t  };\r\n\t  var reverse = function reverse(xs) {\r\n\t\treturn xs.slice(0).reverse();\r\n\t  };\r\n\t  var comp = function comp(f) {\r\n\t\treturn function (g) {\r\n\t\t  return function (x) {\r\n\t\t\treturn f(g(x));\r\n\t\t  };\r\n\t\t};\r\n\t  };\r\n\t  var not = function not(x) {\r\n\t\treturn !x;\r\n\t  };\r\n\t  var chunk = function chunk(n) {\r\n\t\treturn function (xs) {\r\n\t\t  return isEmpty(xs) ? [] : [take(n)(xs)].concat(chunk(n)(drop(n)(xs)));\r\n\t\t};\r\n\t  };\r\n\t  \r\n\t  // numToWords :: (Number a, String a) => a -> String\r\n\t  var num2Words = function num2Words(n) {\r\n\t  \r\n\t\tvar a = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\r\n\t  \r\n\t\tvar b = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\r\n\t  \r\n\t\tvar g = ['', 'thousand', 'million', 'billion', 'trillion', 'quadrillion', 'quintillion', 'sextillion', 'septillion', 'octillion', 'nonillion'];\r\n\t  \r\n\t\t// this part is really nasty still\r\n\t\t// it might edit this again later to show how Monoids could fix this up\r\n\t\tvar makeGroup = function makeGroup(_ref) {\r\n\t\t  var ones = _ref[0],\r\n\t\t\t  tens = _ref[1],\r\n\t\t\t  huns = _ref[2];\r\n\t  \r\n\t\t  return [num(huns) === 0 ? '' : a[huns] + ' hundred ', num(ones) === 0 ? b[tens] : b[tens] && b[tens] + '-' || '', a[tens + ones] || a[ones]].join('');\r\n\t\t};\r\n\t  \r\n\t\tvar thousand = function thousand(group, i) {\r\n\t\t  return group === '' ? group : group + ' ' + g[i];\r\n\t\t};\r\n\t  \r\n\t\tif (typeof n === 'number') return numToWords(String(n));else if (n === '0') return 'zero';else return comp(chunk(3))(reverse)(arr(n)).map(makeGroup).map(thousand).filter(comp(not)(isEmpty)).reverse().join(' ');\r\n\t}; \r\n     var constructor=function(number)\r\n\t {\r\n        return num2Words(number);\r\n\t }\r\n\t \r\n\t return constructor;\r\n });\r\n\r\n"],
  "mappings": "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",
  "names": ["window", "arr", "num", "str", "isEmpty", "take", "drop", "reverse", "comp", "not", "chunk", "num2Words", "makeGroup", "thousand"]
}
